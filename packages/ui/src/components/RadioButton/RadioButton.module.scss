@import '../../../styles/common';

.Checkbox {
  position: relative;
  margin: var(--space-025);
  width: fit-content;

  display: flex;
  align-items: center;
  padding: var(--space-1) 0;
  cursor: pointer;

  --gap: 8px;
  @media #{$breakpoints-md-down} {
    --gap: 9px;
  }

  label {
    padding-inline-start: var(--gap);
  }
}

.Input {
  --icon-size: 8px;

  @media #{$breakpoints-md-down} {
    --icon-size: 10px;
  }

  position: relative;
  top: 0;
  left: 0;
  display: block;
  width: 100%;
  height: 100%;
  border: var(--border-width-2) solid var(--border-default);
  border-radius: var(--border-radius-full);
  background-color: var(--surface-default);
  transition: border-color var(--duration-100) var(--ease);

  &::before {
    content: '';

    position: absolute;

    top: 50%;

    left: 50%;
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.1);
    transform-origin: 50% 50%;

    height: var(--icon-size);

    width: var(--icon-size);
    background-color: var(--interactive-default);
    border-radius: var(--border-radius-full);
    transition: opacity var(--duration-100) var(--ease),
      transform var(--duration-100) var(--ease);

    @media (forced-colors: active) {
      border: var(--border-width-5) solid transparent;
    }
  }

  @include focus-ring($border-width: var(--border-width-2));

  &::after {
    border-radius: var(--border-radius-full);
  }

  &.hover,
  &:hover {
    cursor: pointer;
    border-color: var(--border-hovered);
  }
}

.Indicator {
  @include recolor-icon(var(--icon-on-interactive));

  position: absolute;
  top: 50%;
  left: 50%;
  transform-origin: 50% 50%;
  pointer-events: none;

  transform: translate3d(-50%, -50%, 0) scale(0.25);
  opacity: 0;
  transition: opacity var(--duration-100) var(--ease),
    transform var(--duration-100) var(--ease);

  @media (-ms-high-contrast: active) {
    fill: windowText;
  }
}

.Error {
  background-color: var(--surface-critical-subdued);
  border-color: var(--interactive-critical);

  &:hover {
    border-color: var(--interactive-critical);
  }

  &::before {
    background-color: var(--interactive-critical);
  }
}

.Disabled {
  background-color: var(--surface-subdued);
  border-color: var(--border-disabled);

  &:hover {
    border-color: var(--border-disabled);
  }

  &::before {
    background-color: var(--surface-subdued);
  }
}

.RadioGroupRoot {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

.RadioItem {
  --choice-size: 20px;
  @media #{$breakpoints-md-down} {
    --choice-size: 18px;
  }

  background-color: var(--surface-default);
  width: var(--choice-size);
  height: var(--choice-size);
  min-width: var(--choice-size);
  min-height: var(--choice-size);
  border-radius: 100%;
  border: var(--border-width-2) solid var(--border-default);

  &:hover {
    border-color: var(--border-hovered);
  }

  &[data-state='checked'] {
    border-color: var(--interactive-default);
  }
}

.RadioIndicator {
  --icon-size: 8px;

  @media #{$breakpoints-md-down} {
    --icon-size: 10px;
  }
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  position: relative;

  &::after {
    content: '';
    display: block;
    width: var(--icon-size);
    height: var(--icon-size);

    min-width: var(--icon-size);
    min-height: var(--icon-size);
    border-radius: 50%;
    background-color: var(--interactive-default);
  }
}
