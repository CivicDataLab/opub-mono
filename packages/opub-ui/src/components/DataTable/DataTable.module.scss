@import '../../../styles/common';

.DataTable {
  --op-data-table-first-column-width: 145px;
  position: relative;
  max-width: 100vw;
  background-color: var(--surface);
  border-radius: var(--border-radius-2);
  overflow: hidden;
}

.ScrollContainer {
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
  scroll-behavior: smooth;
  background-color: inherit;
}

.Table {
  width: 100%;
  border-spacing: 0;
  font-size: var(--font-size-100);
}

.TableRow {
  &.Hoverable {
    transition: background-color var(--duration-200) var(--ease-in-out);

    &.TableBodyRow {
      &:hover {
        background-color: var(--surface-hovered);
      }
    }
  }

  + .TableRow {
    .Cell {
      border-top: var(--border-divider);
    }
  }
}

.Cell {
  font-weight: var(--font-weight-regular);
  color: var(--text);
  padding: var(--space-4);
  white-space: nowrap;
  text-align: left;

  .IncreasedTableDensity & {
    padding: var(--space-2) var(--space-4);
  }
}

.Cell-header {
  font-weight: var(--font-weight-regular);
  color: var(--text);
  border-bottom: var(--border-divider);
  border-top: 0;

  .IncreasedTableDensity & {
    font-weight: var(--font-weight-medium);
    font-size: var(--font-size-75);
  }
}

.Cell-sortable {
  padding: 0;

  .IncreasedTableDensity & {
    padding: var(--space-2) var(--space-3);

    &:first-child {
      padding-left: var(--space-3);
    }

    &:last-child {
      padding-right: var(--space-3);
    }
  }

  .IncreasedTableDensity & .Heading-left {
    padding-right: 0;
    padding-left: var(--space-1);
  }
}

.Cell-firstColumn {
  text-align: left;
  white-space: normal;
}

.Cell-numeric {
  text-align: right;
}

.Cell-truncated {
  white-space: nowrap;
  overflow-x: hidden;
  text-overflow: ellipsis;
  max-width: var(--op-data-table-first-column-width);
}

.Heading {
  @include unstyled-button;
  @include focus-ring;
  position: relative;
  display: inline-flex;
  justify-content: flex-end;
  align-items: baseline;
  color: var(--text);
  transition: color var(--duration-200) var(--ease);
  cursor: pointer;
  padding: var(--space-2);
  margin: var(--space-2);

  svg {
    fill: var(--icon-disabled);
  }

  .StickyHeaderEnabled [data-sticky-active] & {
    visibility: hidden;
  }

  .StickyHeaderEnabled [data-sticky-active] .StickyHeaderWrapper & {
    visibility: visible;
  }

  .IncreasedTableDensity & {
    font-weight: var(--font-weight-medium);
    font-size: var(--font-size-75);
    padding: 0;
    padding-right: var(--space-1);
    margin: 0;
  }

  &:hover {
    color: var(--interactive-hovered);

    .Icon {
      opacity: 1;
    }
  }

  &:focus-visible:not(:active) {
    @include focus-ring($style: 'focused');

    .Icon {
      opacity: 1;

      svg {
        fill: var(--icon-disabled);
      }
    }
  }
}

.Heading-left {
  justify-content: flex-start;
  flex-direction: row-reverse;
}

.Cell-sorted {
  .Icon {
    opacity: 1;

    svg {
      fill: var(--icon);
    }
  }

  &:hover svg {
    fill: var(--interactive-hovered);
  }

  .Heading:focus:not(:active) {
    svg {
      fill: var(--icon);
    }
  }
}

.Icon {
  display: flex;
  align-self: flex-end;
  opacity: 0;
  transition: opacity var(--duration-200) var(--ease);
}

.ZebraStripingOnData {
  .TableRow:nth-child(2n + 1),
  &.RowCountIsEven .TableRow:nth-child(2n),
  &.ShowTotalsInFooter .TableRow:nth-child(2n),
  &.ShowTotalsInFooter.RowCountIsEven .TableRow:nth-child(2n + 1) {
    background: none;
  }

  .TableRow:nth-child(2n),
  &.RowCountIsEven .TableRow:nth-child(2n + 1),
  &.ShowTotalsInFooter .TableRow:nth-child(2n + 1),
  &.ShowTotalsInFooter.RowCountIsEven .TableRow:nth-child(2n) {
    background: var(--surface-subdued);

    &:hover {
      background: var(--surface-subdued);
    }
  }
}

.Navigation {
  display: none;

  .IncreasedTableDensity & {
    padding: var(--space-2) var(--space-2) 0 var(--space-2);
  }
}

.TooltipContent {
  display: block;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}
