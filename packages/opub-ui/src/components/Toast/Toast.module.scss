.ToastViewPort {
  position: fixed;
  bottom: 0;
  right: 0;
  display: flex;
  flex-direction: column;
  padding: var(--space-3);
  gap: 10px;
  min-width: 146px;
  max-width: 100vw;
  margin: 0;
  list-style: none;
  z-index: 1;
  outline: none;
}

.ToastRoot {
  background-color: var(--background-invert);
  border-radius: var(--border-radius-1);
  box-shadow: var(--shadow-popover);
  padding: var(--space-3);
  display: grid;
  grid-template-areas: 'title action close' '. . .';
  grid-template-columns: auto max-content;
  column-gap: var(--space-2);
  align-items: center;
}
.ToastRoot[data-state='open'] {
  animation: var(--keyframes-fade-in) var(--duration-150) var(--ease-in);
}
.ToastRoot[data-state='closed'] {
  animation: hide var(--duration-100) var(--ease-in);
}
.ToastRoot[data-swipe='move'] {
  transform: translateX(var(--radix-toast-swipe-move-x));
}
.ToastRoot[data-swipe='cancel'] {
  transform: translateX(0);
  transition: transform var(--duration-200) var(--ease-in);
}
.ToastRoot[data-swipe='end'] {
  animation: swipeOut var(--duration-100) var(--ease-out);
}
.ToastDescriptionArea {
  grid-template-areas:
    'title action close'
    'description action  close';
}

.ToastError {
  background-color: var(--icon-critical);
}

@keyframes hide {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes slideIn {
  from {
    transform: translateX(calc(100% + var(--viewport-padding)));
  }
  to {
    transform: translateX(0);
  }
}

@keyframes swipeOut {
  from {
    transform: translateX(var(--radix-toast-swipe-end-x));
  }
  to {
    transform: translateX(calc(100% + var(--viewport-padding)));
  }
}

.ToastTitle {
  grid-area: title;
  font-weight: var(--font-weight-medium);
  color: var(--surface);
  font-size: var(--font-size-100);
}

.ToastDescription {
  grid-area: description;
  margin: 0;
  color: var(--surface);
  font-size: var(--font-size-75);
  line-height: 1.3;
}

.ErrorIconArea {
  display: flex;
  place-content: center;
  gap: var(--space-2);
}

.ToastAction {
  grid-area: action;
  color: var(--surface);
  border: 0;
  background: transparent;
  font-size: var(--font-size-100);
  cursor: pointer;
}

.ToastAction {
  &:hover {
    text-decoration: underline;
  }
}

.ToastClose {
  grid-area: close;
  border: 0;
  background: transparent;
  cursor: pointer;
  svg {
    fill: var(--text-disabled);
    margin-top: var(--space-1);
  }
}

.ToastCloseError {
  svg {
    fill: var(--surface);
  }
}
