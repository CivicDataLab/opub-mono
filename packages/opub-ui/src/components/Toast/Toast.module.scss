.ToastContainer{
display: grid;
gap:var(--space-3)
}

.ToastViewPort {
  position: fixed;
  bottom:0;
  right: 0;
  display: flex;
  flex-direction: column-reverse;
  padding: var(--space-3);
  gap: 10px;
  min-width: 146px;
  max-width: 100vw;
  margin: 0;
  list-style: none;
  z-index: 1;
  outline: none;
}

.ToastRoot {
  background-color: var(--background-invert);
  border-radius: var(--border-radius-1);
  box-shadow: var(--shadow-popover);
  padding: var(--space-3);
  display: flex;
  width: 100%;
  column-gap: var(--space-2);
  justify-content: space-between;
  align-items: center;
}

.ToastRoot[data-state='open'] {
  animation: slideIn var(--duration-150) var(--ease-in);
}
.ToastRoot[data-state='closed'] {
  animation: swipeOut var(--duration-100) var(--ease-in);
}
.ToastRoot[data-swipe='move'] {
  transform: translateX(var(--radix-toast-swipe-move-x));
}
.ToastRoot[data-swipe='cancel'] {
  transform: translateX(0);
  transition: transform var(--duration-200) var(--ease-in);
}
.ToastRoot[data-swipe='end'] {
  animation: swipeOut var(--duration-100) var(--ease-out);
}

.ToastError {
  background-color: var(--icon-critical);
}

@keyframes hide {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes slideIn {
  from {
    transform: translateX(calc(100% + var(--space-6)));
  }
  to {
    transform: translateX(0);
  }
}

@keyframes swipeOut {
  from {
    transform: translateX(var(--radix-toast-swipe-end-x));
  }
  to {
    transform: translateX(calc(100% + var(--space-6)));
  }
}

.ToastTitle {
  font-weight: var(--font-weight-medium);
  color: var(--surface);
  font-size: var(--font-size-100);

  .ErrorIconArea {
    display: flex;
    place-content: center;
    gap: var(--space-2);

    svg {
      fill: currentColor;
    }
  }
}

.ToastDescription {
  margin: 0;
  color: var(--surface);
  font-size: var(--font-size-75);
  line-height: 1.3;
}

.ToastAction {
  color: var(--surface);
  border: 0;
  background: transparent;
  font-size: var(--font-size-100);
  cursor: pointer;

  &:hover {
    text-decoration: underline;
  }
}

.ToastClose {
  border: 0;
  background: transparent;
  cursor: pointer;
  color: var(--icon-subdued);

  svg {
    fill: currentColor;
  }

  &:focus,
  &:hover {
    color: var(--text-on-interactive);
  }
}

.ToastCloseError {
  color: var(--surface);

  svg {
    fill: currentColor;
  }
}
