@import '../../../styles/common';

@mixin button-base {
  $vertical-padding: calc(
    (36px - var(--font-line-height-2) - var(--space-05)) / 2
  );

  @include recolor-icon(var(--icon));

  @include focus-ring($border-width: var(--border-width-1));

  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  min-height: 36px;
  min-width: 36px;
  margin: 0;

  padding: $vertical-padding var(--space-4);
  background: var(--surface);
  box-shadow: var(--shadow-button);
  border-radius: var(--border-radius-1);
  color: var(--text);
  border: var(--border-width-1) solid var(--border-neutral-subdued);
  border-top-color: var(--border-subdued);
  border-bottom-color: var(--border-shadow-subdued);
  line-height: 1;
  text-align: center;
  cursor: pointer;
  user-select: none;
  text-decoration: none;
  -webkit-tap-highlight-color: transparent;

  &:hover {
    outline: var(--border-width-1) solid transparent;
  }

  &:focus-visible {
    box-shadow: var(--shadow-button);
    outline: 0;

    @include focus-ring($style: 'focused');
  }

  &:active {
    background: var(--surface-pressed);
    box-shadow: var(--shadow-button);

    &::after {
      border: none;
      box-shadow: none;
    }
  }

  &.pressed {
    background: var(--surface-pressed);
    box-shadow: var(--shadow-inset-button-pressed);
    color: var(--text);
    border-color: var(--border-depressed);

    @include recolor-icon(currentColor);
  }

  @media (-ms-high-contrast: active) {
    border: var(--border-width-1) solid windowText;
  }
}

@mixin button-filled($border-color: transparent) {
  @include focus-ring($border-width: 0);

  background: var(--button-color);
  border-width: 0;
  border-color: transparent;
  box-shadow: var(--shadow-button), var(--shadows-inset-button);

  color: var(--button-text);

  &:hover {
    background: var(--button-color-hover);
    border-color: $border-color;

    color: var(--button-text);
  }

  &:focus {
    border-color: $border-color;
    box-shadow: var(--shadow-button), var(--shadows-inset-button);
  }

  &:active {
    background: var(--button-color-active);
    border-color: $border-color;
    box-shadow: var(--shadow-button), var(--shadows-inset-button);
  }

  &.pressed {
    color: var(--button-text);

    background: var(--button-color-depressed);
    border-color: $border-color;
    box-shadow: var(--shadow-button), var(--shadows-inset-button);

    &:hover,
    &:focus {
      background: var(--button-color-depressed);
      box-shadow: var(--shadow-button), var(--shadows-inset-button);
    }
  }
}

@mixin button-outline($border-color: var(--button-border)) {
  @include button-filled($border-color);
  border: var(--border-width-1) solid var(--button-border);

  @include focus-ring($border-width: 1px);
}

@mixin button-outline-disabled($outline-color) {
  background: transparent;
  box-shadow: none;
}

@mixin button-full-width {
  display: flex;

  width: 100%;
}

@mixin plain-button-backdrop {
  padding: var(--space-05) var(--space-1);
  margin: calc(-1 * var(--space-05)) calc(-1 * var(--space-1));
  background: transparent;
  border-radius: var(--border-radius-1);
}

.Button {
  --button-slim-min-height: var(--font-line-height-4);
  --button-large-min-height: 44px;
  --button-vertical-padding: calc(
    (36px - var(--font-line-height-2) - var(--space-05)) / 2
  );
  --button-slim-vertical-padding: calc(
    (
        var(--button-slim-min-height) - var(--font-line-height-2) -
          var(--space-05)
      ) / 2
  );
  --button-large-vertical-padding: calc(
    (
        var(--button-large-min-height) - var(--font-line-height-2) -
          var(--space-05)
      ) / 2
  );
  --button-spinner-size: 20px;
  --button-segment: 10;
  --button-focused: 20;
  --button-disclosure-icon-offset: -6px;

  --button-icon: var(--text-onbg-default);

  @include button-base;

  &.disabled {
    @include base-button-disabled;
  }

  &.connectedDisclosure {
    z-index: var(--button-segment);
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;

    &::after {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    &:focus {
      z-index: var(--button-focused);
    }
  }
}

.Content {
  font-size: var(--font-size-100);
  font-weight: var(--font-weight-medium);
  line-height: var(--font-line-height-1);

  text-transform: initial;
  letter-spacing: initial;

  position: relative;

  display: flex;

  justify-content: center;

  align-items: center;
  min-width: 1px;
  min-height: 1px;

  .Button:not(.kindTertiary) & {
    width: 100%;
  }
}

.textAlignLeft {
  justify-content: flex-start;
  text-align: left;

  .Content {
    justify-content: flex-start;
  }
}

.textAlignStart {
  justify-content: flex-start;
  text-align: start;

  .Content {
    justify-content: flex-start;
  }
}

.textAlignCenter {
  justify-content: center;
  text-align: center;
}

.textAlignRight {
  justify-content: flex-end;
  text-align: right;

  .Content {
    justify-content: flex-end;
  }
}

.textAlignEnd {
  justify-content: flex-end;
  text-align: end;

  .Content {
    justify-content: flex-end;
  }
}

.Icon {
  margin-left: calc(-1 * (var(--space-1)));
  line-height: 0;

  &:last-child {
    margin-right: -2px;
  }

  .fullWidth.textAlignLeft &:last-child:not(:only-child) {
    margin-left: auto;
  }

  + *:not(.Icon) {
    margin-left: var(--space-1);
  }
}

.hidden {
  visibility: hidden;
}

.Spinner {
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: calc(-1 * (var(--button-spinner-size) / 2));
  margin-left: calc(-1 * (var(--button-spinner-size) / 2));
}

.kindPrimary,
.destructive {
  @include button-filled;

  &.disabled {
    @include recolor-icon(var(--text-onbg-default));
    color: var(--text-onbg-default);
    box-shadow: none;
    border-color: transparent;
  }
}

.variantBasic {
  --button-color: var(--action-primary-basic-default);
  --button-text: var(--text-onbg-default);
  --button-color-hover: var(--action-primary-basic-hovered);
  --button-color-active: var(--action-primary-basic-pressed);
  --button-color-depressed: var(--action-primary-basic-depressed);

  @include recolor-icon(var(--icon-on-primary));

  &.disabled {
    background: var(--action-primary-disabled);

    &.loading {
      background: var(--action-primary-basic-default);
    }
  }

  &.kindSecondary {
    --button-color: var(--action-secondary-basic-default);
    --button-text: var(--text-highlight);
    --button-border: var(--border-highlight-default);
    --button-color-hover: var(--action-secondary-basic-hovered);
    --button-color-active: var(--action-secondary-basic-pressed);
    --button-color-depressed: var(--action-secondary-basic-depressed);

    &.disabled {
      background: var(--action-secondary-disabled);

      &.loading {
        background: var(--action-secondary-basic-default);
        --button-icon: var(--text-highlight);
      }
    }
  }
}

.variantInteractive {
  --button-color: var(--action-primary-interactive-default);
  --button-text: var(--text-onbg-default);
  --button-color-hover: var(--action-primary-interactive-hovered);
  --button-color-active: var(--action-primary-interactive-pressed);
  --button-color-depressed: var(--action-primary-interactive-depressed);

  @include recolor-icon(var(--icon-on-primary));

  &.disabled {
    background: var(--action-primary-disabled);

    &.loading {
      background: var(--action-primary-interactive-default);
    }
  }

  &.kindSecondary {
    --button-color: var(--action-secondary-interactive-default);
    --button-text: var(--text-interactive);
    --button-border: var(--border-interactive-default);
    --button-color-hover: var(--action-secondary-interactive-hovered);
    --button-color-active: var(--action-secondary-interactive-pressed);
    --button-color-depressed: var(--action-secondary-interactive-depressed);

    &.disabled {
      background: var(--action-secondary-disabled);

      &.loading {
        background: var(--action-secondary-interactive-default);
        --button-icon: var(--text-interactive);
      }
    }
  }
}

.variantCritical {
  --button-color: var(--action-primary-critical-default);
  --button-text: var(--text-onbg-default);
  --button-color-hover: var(--action-primary-critical-hovered);
  --button-color-active: var(--action-primary-critical-pressed);
  --button-color-depressed: var(--action-primary-critical-depressed);

  @include recolor-icon(var(--icon-on-primary));

  &.disabled {
    background: var(--action-primary-disabled);

    &.loading {
      background: var(--action-primary-critical-default);
    }
  }

  &.kindSecondary {
    --button-color: var(--action-secondary-critical-default);
    --button-text: var(--text-critical);
    --button-border: var(--border-critical-default);
    --button-color-hover: var(--action-secondary-critical-hovered);
    --button-color-active: var(--action-secondary-critical-pressed);
    --button-color-depressed: var(--action-secondary-critical-depressed);

    &.disabled {
      background: var(--action-secondary-disabled);

      &.loading {
        background: var(--action-secondary-critical-default);
        --button-icon: var(--text-critical);
      }
    }
  }
}

.variantSuccess {
  --button-color: var(--action-primary-success-default);
  --button-text: var(--text-onbg-default);
  --button-color-hover: var(--action-primary-success-hovered);
  --button-color-active: var(--action-primary-success-pressed);
  --button-color-depressed: var(--action-primary-success-depressed);

  @include recolor-icon(var(--icon-on-primary));

  &.disabled {
    background: var(--action-primary-disabled);

    &.loading {
      background: var(--action-primary-success-default);
    }
  }

  &.kindSecondary {
    --button-color: var(--action-secondary-success-default);
    --button-text: var(--text-success);
    --button-border: var(--border-success-default);
    --button-color-hover: var(--action-secondary-success-hovered);
    --button-color-active: var(--action-secondary-success-pressed);
    --button-color-depressed: var(--action-secondary-success-depressed);

    &.disabled {
      background: var(--action-secondary-disabled);

      &.loading {
        background: var(--action-secondary-success-default);
        --button-icon: var(--text-success);
      }
    }
  }
}

.kindSecondary {
  @include button-outline();

  &.disabled {
    background: transparent;
    box-shadow: none;
  }
}

.disabled {
  cursor: default;
  pointer-events: none;
}

.loading {
  position: relative;

  &,
  &:hover,
  &.disabled {
    color: transparent;
  }
}

.loading.disabled svg {
  fill: var(--button-icon);
}

.kindTertiary {
  @include recolor-icon(var(--text-highlight));

  margin: calc(-1 * var(--button-vertical-padding)) calc(-1 * var(--space-2));
  padding-left: var(--space-2);
  padding-right: var(--space-2);
  background: transparent;
  border: 0;
  box-shadow: none;
  color: var(--text-highlight);

  > .Content {
    font-weight: var(--font-weight-regular);

    @include focus-ring;
  }

  &:hover,
  &:focus:not(.disabled) {
    background-color: var(--action-tertiary-basic-hover);

    &:not(.removeUnderline) {
      text-decoration: underline;
    }
  }

  &:focus-visible {
    @include no-focus-ring;

    @include high-contrast-button-outline(none);

    > .Content {
      @include high-contrast-button-outline;
    }
  }

  &:focus-visible:not(:active) {
    > .Content {
      @include focus-ring($style: 'focused');
    }
  }

  &:active > .Content,
  &.pressed > .Content {
    @include plain-button-backdrop;
  }

  &.fullWidth {
    margin-left: 0;
    margin-right: 0;
  }

  &.variantInteractive {
    @include recolor-icon(var(--text-interactive));
    color: var(--text-interactive);

    &:hover {
      background-color: var(--action-tertiary-interactive-hover);
    }
  }

  &.variantCritical {
    @include recolor-icon(var(--text-critical));
    color: var(--text-critical);

    &:hover {
      background-color: var(--action-tertiary-critical-hover);
    }
  }

  &.variantSuccess {
    @include recolor-icon(var(--text-success));
    color: var(--text-success);

    &:hover {
      background-color: var(--action-tertiary-success-hover);
    }
  }

  &.disabled {
    color: var(--text-disabled);
    background: none;

    &.loading {
      color: transparent;
    }
  }

  &.sizeSlim {
    margin-top: calc(-1 * var(--button-slim-vertical-padding));

    margin-bottom: calc(-1 * var(--button-slim-vertical-padding));
  }

  &.sizeLarge {
    margin: calc(-1 * var(--button-large-vertical-padding))
      calc(-1 * var(--space-5));
  }
}

.fullWidth {
  @include button-full-width;
}

.sizeSlim {
  min-height: var(--button-slim-min-height);
  padding: var(--button-slim-vertical-padding) var(--space-3);
}

.sizeLarge {
  min-height: var(--button-large-min-height);
  min-width: var(--button-large-min-height);
  padding: var(--button-large-vertical-padding) var(--space-6);

  .Content {
    font-size: var(--font-size-200);
    font-weight: var(--font-weight-medium);
    line-height: var(--font-line-height-2);

    text-transform: initial;
    letter-spacing: initial;
  }
}

.ConnectedDisclosureWrapper {
  display: flex;
}

.ConnectedDisclosure {
  z-index: var(--button-segment);
  margin-left: calc(-1 * var(--space-025));
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  padding-inline: var(--space-2);
  height: 100%;

  &:focus,
  &:active {
    z-index: var(--button-focused);
  }

  &.kindPrimary,
  &.destructive {
    margin-left: var(--space-025);

    &.kindSecondary {
      margin-left: 0;
      border-left: 0;
    }
  }

  &::after {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
}

[data-buttongroup-segmented='true'] {
  .Button,
  .Button::after {
    border-radius: 0;
  }

  > :first-of-type .Button,
  > :first-of-type .Button::after {
    border-radius: 0;
    border-top-left-radius: var(--border-radius-1);
    border-bottom-left-radius: var(--border-radius-1);
  }

  > :last-child .Button,
  > :last-child .Button::after {
    border-radius: 0;
    border-top-right-radius: var(--border-radius-1);
    border-bottom-right-radius: var(--border-radius-1);
  }

  > :last-child:first-of-type .Button,
  > :last-child:first-of-type .Button::after {
    border-radius: var(--border-radius-1);
  }
}

[data-buttongroup-connected-top='true'] {
  > :first-of-type .Button,
  > :first-of-type .Button::after {
    border-top-left-radius: 0;
  }

  > :last-child .Button,
  > :last-child .Button::after {
    border-top-right-radius: 0;
  }
}

[data-buttongroup-full-width='true'] {
  .Button {
    @include button-full-width;
  }
}

.Placeholder {
  padding-bottom: 100%;
  background: currentColor;
}
