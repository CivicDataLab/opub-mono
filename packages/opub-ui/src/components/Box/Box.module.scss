@import '../../../styles/common';

.listReset {
  list-style-type: none;
  margin-block-start: 0;
  margin-block-end: 0;
  outline: none;
  padding-inline-start: 0;
}

.Box {
  @include responsive-props('box', 'padding-block-end', 'padding-block-end');
  @include responsive-props(
    'box',
    'padding-block-start',
    'padding-block-start'
  );
  @include responsive-props(
    'box',
    'padding-inline-start',
    'padding-inline-start'
  );
  @include responsive-props('box', 'padding-inline-end', 'padding-inline-end');

  --op-box-shadow: initial;
  --op-box-background: initial;
  --op-box-border-radius: initial;
  --op-box-border-radius-end-start: initial;
  --op-box-border-radius-end-end: initial;
  --op-box-border-radius-start-start: initial;
  --op-box-border-radius-start-end: initial;
  --op-box-border: initial;
  --op-box-border-block-end: initial;
  --op-box-border-inline-start: initial;
  --op-box-border-inline-end: initial;
  --op-box-border-block-start: initial;
  --op-box-color: initial;
  --op-box-min-height: initial;
  --op-box-min-width: initial;
  --op-box-max-width: initial;
  --op-box-outline: initial;
  --op-box-overflow-x: initial;
  --op-box-overflow-y: initial;
  --op-box-width: initial;
  --op-box-border-width: var(--border-width-1);
  --op-box-inset-block-start: initial;
  --op-box-inset-block-end: initial;
  --op-box-inset-inline-start: initial;
  --op-box-inset-inline-end: initial;

  inset-block-start: var(--op-box-inset-block-start);

  inset-block-end: var(--op-box-inset-block-end);

  inset-inline-start: var(--op-box-inset-inline-start);

  inset-inline-end: var(--op-box-inset-inline-end);

  background-color: var(--op-box-background);

  box-shadow: var(--op-box-shadow);

  border-radius: var(--op-box-border-radius);

  border-end-start-radius: var(
    --op-box-border-radius-end-start,
    var(--op-box-border-radius)
  );

  border-end-end-radius: var(
    --op-box-border-radius-end-end,
    var(--op-box-border-radius)
  );

  border-start-start-radius: var(
    --op-box-border-radius-start-start,
    var(--op-box-border-radius)
  );

  border-start-end-radius: var(
    --op-box-border-radius-start-end,
    var(--op-box-border-radius)
  );

  border-block-end: var(--op-box-border-block-end, var(--op-box-border));

  border-inline-start: var(--op-box-border-inline-start, var(--op-box-border));

  border-inline-end: var(--op-box-border-inline-end, var(--op-box-border));

  border-block-start: var(--op-box-border-block-start, var(--op-box-border));

  border-block-start-width: var(
    --op-box-border-block-start-width,
    var(--op-box-border-width)
  );

  border-block-end-width: var(
    --op-box-border-block-end-width,
    var(--op-box-border-width)
  );

  border-inline-start-width: var(
    --op-box-border-inline-start-width,
    var(--op-box-border-width)
  );

  border-inline-end-width: var(
    --op-box-border-inline-end-width,
    var(--op-box-border-width)
  );

  color: var(--op-box-color);

  min-height: var(--op-box-min-height);

  min-width: var(--op-box-min-width);

  max-width: var(--op-box-max-width);

  outline: var(--op-box-outline);

  overflow-x: var(--op-box-overflow-x);

  overflow-y: var(--op-box-overflow-y);

  width: var(--op-box-width);
  -webkit-overflow-scrolling: touch;
}

.visuallyHidden {
  @include visually-hidden;
}

.printHidden {
  @media print {
    display: none !important;
  }
}
