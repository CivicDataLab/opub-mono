@import '../../../styles/common';

$vertical-spacing: 60px;
$height-limit: 600px;
$xsmall-width: 380px;
$small-width: 620px;
$large-width: 980px;

.Container {
  position: fixed;
  z-index: var(--z-max);
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  pointer-events: none;

  @media #{$breakpoints-md-up} {
    justify-content: center;
  }
}

@keyframes overlayShow {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes overlayHide {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes contentShow {
  from {
    opacity: 0;
    transform: var(--show-from);
  }
  to {
    opacity: 1;
    transform: var(--show-to);
  }
}

@keyframes contentHide {
  from {
    opacity: 1;
    transform: var(--hide-from);
  }
  to {
    opacity: 0;
    transform: var(--hide-to);
  }
}

.Overlay {
  background-color: var(--surface-backdrop);
  position: fixed;
  inset: 0;
  will-change: transform, opacity;
  z-index: var(--z-1);

  &[data-state='open'] {
    animation: overlayShow var(--duration-100) var(--ease);
  }

  &[data-state='closed'] {
    animation: overlayHide var(--duration-100) var(--ease);
  }
}

.Dialog {
  --content-bg: var(--surface-default);
  --show-from: translate(-50%, 5vh);
  --show-to: translate(-50%, 10vh);
  --hide-from: translate(-50%, 10vh);
  --hide-to: translate(-50%, 5vh);
  z-index: var(--z-1);
  background-color: var(--content-bg);

  box-shadow: var(--shadow-basic-2xl);
  width: 100%;
  max-height: calc(100vh - #{$vertical-spacing});

  position: fixed;
  top: 10vh;
  left: 50%;
  transform: translate(-50%, 10vh);
  will-change: transform, opacity;

  &[data-state='open'] {
    animation: contentShow var(--duration-200) var(--ease);
    &.Instant {
      animation-duration: 0;
    }
    @media #{$breakpoints-md-down} {
      --show-from: translate(0, 10%);
      --show-to: translate(0, 0);
    }
  }

  &[data-state='closed'] {
    animation: contentHide var(--duration-200) var(--ease);
    &.Instant {
      animation-duration: 0;
    }

    @media #{$breakpoints-md-down} {
      --hide-from: translate(0, 0);
      --hide-to: translate(0, 10%);
    }
  }

  @media (forced-colors: active) {
    border: var(--border-width-1) solid transparent;
  }

  @media #{$breakpoints-md-down} {
    max-height: 100%;
    width: auto;
    transform: translate(0, 0);
    margin-inline: var(--space-2);
    left: 0;
  }

  @media #{$breakpoints-md-up} {
    max-width: $small-width;
    border-radius: var(--border-radius-2);
  }

  &.limitHeight {
    @media #{$breakpoints-md-up} {
      @media (min-height: calc((($height-limit + $vertical-spacing) / 16px) * 1em)) {
        max-height: $height-limit;
        bottom: 0;
      }
      .Content {
        max-height: calc($height-limit - 130px);
      }
    }
  }

  &.sizeSmall {
    @media #{$breakpoints-md-up} {
      max-width: calc(100% - var(--space-16));
    }

    @media #{$breakpoints-sm-up} {
      max-width: $xsmall-width;
    }
  }

  &.sizeLarge {
    @media #{$breakpoints-md-up} {
      max-width: calc(100% - var(--space-16));
    }

    @media #{$breakpoints-lg-up} {
      max-width: $large-width;
    }
  }

  &.fullScreen {
    height: 100%;
    @media #{$breakpoints-md-up} {
      height: unset;
    }
  }
}

.Content {
  overflow: auto;
  padding: var(--space-5);

  @media #{$breakpoints-md-down} {
    max-height: 70vh;
  }
}
